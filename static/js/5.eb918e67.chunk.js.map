{"version":3,"sources":["providers/api.js","providers/properties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","pages/Map/hooks/usePopover.js","pages/Map/PropertiesLayer/index.jsx","pages/Map/HeatMapLayer/index.jsx","pages/Map/Layers.jsx","pages/Map/styled.js","pages/Map/index.jsx","utils/geo.js"],"names":["api","axios","create","baseURL","fetchAllProperties","get","createProperty","data","post","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","getPopupOffsets","markerHeight","markerRadius","linearOffset","top","bottom","left","right","defaultOptions","height","radius","usePopover","uniqueId","placeIds","map","opts","options","useMemo","useEffect","popover","removeClickListeners","removePointerStyles","Array","isArray","U","clickLayer","e","feat","features","props","offset","mapboxgl","Popup","coordinates","geometry","properties","residents","number","zipcode","setLngLat","setHTML","addTo","hoverPointer","_","idx","remove","layerID","sourceID","layersComponent","heatmap","dataSource","addSource","type","addLayer","id","maxzoom","paint","property","stops","default","minzoom","zoom","value","removeSource","removeLayer","marker","addGeoJSON","undefined","promoteId","addSymbol","setData","Layers","Component","StyledMapContainer","styled","div","Container","Layout","Sider","layerTypes","Map","useState","loading","setLoading","setMap","setType","then","resp","geoJsonFormated","featurePoints","d","latitude","longitude","title","convertGeoJson","catch","finally","spinning","active","onClick","style","marginBottom","setMapRef"],"mappings":"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","file":"static/js/5.eb918e67.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.mocki.io/v1/dfd64349',\n});\n\nexport default api;\n","import api from './api';\n\nexport function fetchAllProperties() {\n  return api.get(`/properties`);\n}\n\nexport function createProperty(data) {\n  return api.post(`/properties/register`, data);\n}\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useMemo, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nfunction getPopupOffsets(markerHeight = 30, markerRadius = 0) {\n  const linearOffset = 25;\n  return {\n    top: [0, 0],\n    'top-left': [0, 0],\n    'top-right': [0, 0],\n    bottom: [0, -markerHeight],\n    'bottom-left': [\n      linearOffset,\n      (markerHeight - markerRadius + linearOffset) * -1,\n    ],\n    'bottom-right': [\n      -linearOffset,\n      (markerHeight - markerRadius + linearOffset) * -1,\n    ],\n    left: [markerRadius, (markerHeight - markerRadius) * -1],\n    right: [-markerRadius, (markerHeight - markerRadius) * -1],\n  };\n}\n\nconst defaultOptions = { height: 30, radius: 0 };\nexport default function usePopover(\n  uniqueId,\n  placeIds = [],\n  map,\n  opts = defaultOptions\n) {\n  const options = useMemo(() => ({ ...defaultOptions, ...opts }), [opts]);\n\n  useEffect(() => {\n    let popover;\n    let removeClickListeners;\n    let removePointerStyles;\n\n    function addPopup(e) {\n      const feat = e.features[0] || {};\n      const props = { offset: getPopupOffsets(options.height, options.radius) };\n      popover = new mapboxgl.Popup(props);\n      const {\n        geometry: { coordinates },\n        properties: { residents, number, zipcode },\n      } = feat;\n      if (popover) {\n        popover\n          .setLngLat(coordinates)\n          .setHTML(\n            `\n            <strong>PROPERTY INFO</strong><br />\n            <strong>Residents:</strong> ${residents}<br />\n            <strong>Number:</strong> ${number}<br />\n            <strong>ZipCode:</strong> ${zipcode}<br />\n            <br />\n            <strong>Longitude:</strong> ${coordinates[0]}<br />\n            <strong>Latitude:</strong> ${coordinates[1]}\n            `\n          )\n          .addTo(map);\n      }\n    }\n\n    if (uniqueId && Array.isArray(placeIds) && placeIds.length > 0 && map.U) {\n      removeClickListeners = map.U.clickLayer(placeIds, addPopup);\n      removePointerStyles = map.U.hoverPointer(placeIds);\n    }\n\n    return () => {\n      if (uniqueId && Array.isArray(placeIds) && placeIds.length > 0) {\n        placeIds.forEach((_, idx) => {\n          removeClickListeners[idx]();\n          removePointerStyles[idx]();\n        });\n\n        if (popover) {\n          popover.remove();\n          popover = null;\n        }\n      }\n    };\n  }, [map, options, placeIds, uniqueId]);\n\n  return null;\n}\n","import { useEffect } from 'react';\nimport { usePopover } from '../hooks';\n\nconst layerID = 'property_points-source';\nconst iconImage = 'property-icon';\n\nexport default function PropertiesLayer({ dataSource, map }) {\n  usePopover('marker', ['property-symbol', 'property-text'], map, {\n    height: 15,\n  });\n\n  useEffect(() => {\n    map.U.addGeoJSON(layerID, undefined, { promoteId: 'id' });\n\n    map.U.addSymbol('property-symbol', layerID, {\n      'icon-image': iconImage,\n      'icon-ignore-placement': true,\n      'icon-offset': [0, -5],\n      'icon-size': 0.7,\n    });\n\n    map.U.addSymbol('property-text', layerID, {\n      'icon-image': iconImage,\n      'icon-size': 0.9,\n      'icon-offset': [0, -5],\n      'text-field': [\n        'format',\n        ['upcase', ['get', 'title']],\n        { 'font-scale': 1 },\n        '\\n ZipCode: ',\n        {},\n        ['concat', ['get', 'zipcode']],\n        {\n          'font-scale': 0.9,\n        },\n      ],\n      'text-font': ['DIN Pro Medium', 'Arial Unicode MS Regular'],\n      'text-offset': [0, 1.5],\n      'text-anchor': 'top',\n      'text-size': 11,\n      'text-halo-color': 'hsl(0, 0%, 100%)',\n      'text-halo-width': 0.5,\n      'text-halo-blur': 0.5,\n      'text-color': '#0257ac',\n      minzoom: 14,\n    });\n\n    return () => {\n      map.U.removeSource(layerID);\n    };\n  }, [map]);\n\n  useEffect(() => {\n    if (dataSource) {\n      map.U.setData(layerID, dataSource);\n    }\n  }, [dataSource, map.U]);\n\n  return null;\n}\n","import { useEffect } from 'react';\nimport { usePopover } from '../hooks';\n\nconst sourceID = 'heat_map-source';\n\nexport default function HeatMapLayer({ dataSource, map }) {\n  usePopover('heat', ['property-point'], map, {\n    height: 15,\n  });\n\n  useEffect(() => {\n    map.addSource(sourceID, {\n      type: 'geojson',\n      data: dataSource,\n    });\n\n    map.addLayer(\n      {\n        id: 'property-heat',\n        type: 'heatmap',\n        source: sourceID,\n        maxzoom: 15,\n        paint: {\n          // increase weight as diameter breast height increases\n          'heatmap-weight': {\n            property: 'residents',\n            type: 'exponential',\n            stops: [\n              [1, 0],\n              [30, 7],\n            ],\n          },\n          // assign color values be applied to points depending on their density\n          'heatmap-color': [\n            'interpolate',\n            ['linear'],\n            ['heatmap-density'],\n            0,\n            'rgba(209,229,240,0)',\n            0.1,\n            '#ffffb2',\n            0.3,\n            '#feb24c',\n            0.5,\n            '#fd8d3c',\n            0.7,\n            '#fc4e2a',\n            1,\n            '#e31a1c',\n          ],\n          // increase radius as zoom increases\n          'heatmap-radius': {\n            stops: [\n              [11, 25],\n              [15, 50],\n            ],\n          },\n          // decrease opacity to transition into the circle layer\n          'heatmap-opacity': {\n            default: 1,\n            stops: [\n              [14, 1],\n              [15, 0],\n            ],\n          },\n        },\n      },\n      'waterway-label'\n    );\n\n    map.addLayer(\n      {\n        id: 'property-point',\n        type: 'circle',\n        source: sourceID,\n        minzoom: 14,\n        paint: {\n          // Color circle by residents\n          'circle-color': [\n            'interpolate',\n            ['linear'],\n            ['get', 'residents'],\n            1,\n            '#ffffff',\n            2,\n            '#ffffb2',\n            3,\n            '#feb24c',\n            4,\n            '#fc4e2a',\n            5,\n            '#e31a1c',\n            6,\n            '#630636',\n            7,\n            '#350363',\n          ],\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 0,\n          // increase the radius of the circle\n          // as the zoom level and residents value increases\n          'circle-radius': {\n            property: 'residents',\n            type: 'exponential',\n            stops: [\n              [{ zoom: 15, value: 1 }, 5],\n              [{ zoom: 15, value: 7 }, 10],\n              [{ zoom: 22, value: 1 }, 20],\n              [{ zoom: 22, value: 7 }, 50],\n            ],\n          },\n          'circle-opacity': {\n            stops: [\n              [14, 0],\n              [15, 1],\n            ],\n          },\n        },\n      },\n      'waterway-label'\n    );\n\n    return () => {\n      map.U.removeSource(sourceID);\n      map.U.removeLayer(['property-heat', 'property-point']);\n    };\n  }, [dataSource, map]);\n\n  return null;\n}\n","import React from 'react';\nimport PropertiesLayer from './PropertiesLayer';\nimport HeatMapLayer from './HeatMapLayer';\n\nconst layersComponent = {\n  heatmap: HeatMapLayer,\n  marker: PropertiesLayer,\n};\n\n// Load Layers Component\nexport default function Layers({ type, dataSource = [], map }) {\n  const Component = layersComponent[type || 'heatmap'];\n  return <Component dataSource={dataSource} map={map} />;\n}\n","import styled from 'styled-components';\n\nexport const StyledMapContainer = styled.div`\n  width: 100%;\n  height: auto;\n  margin: 30px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { fetchAllProperties } from 'providers/properties';\nimport { convertGeoJson } from 'utils/geo';\nimport { Map as MapComponent, Layout, Button, Spin } from 'components';\nimport Layers from './Layers';\nimport { StyledMapContainer } from './styled';\n\nconst { Container, Sider } = Layout;\n\nconst layerTypes = {\n  HEATMAP: 'heatmap',\n  MARKER: 'marker',\n};\n\n// Layers\nexport default function Map() {\n  const [loading, setLoading] = useState(true);\n  const [map, setMap] = useState();\n  const [data, setData] = useState();\n  const [type, setType] = useState(layerTypes.HEATMAP);\n\n  useEffect(() => {\n    fetchAllProperties()\n      .then(resp => {\n        const result = resp.data || [];\n        const geoJsonFormated = convertGeoJson(result);\n        setData(geoJsonFormated);\n      })\n      // catch erros\n      .catch(() => {})\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (loading) return null;\n\n  return (\n    <>\n      <Spin spinning={loading}>\n        <Container>\n          <Sider>\n            <h3>Change View</h3>\n            <Button\n              active={type === layerTypes.HEATMAP || undefined}\n              onClick={() => setType(layerTypes.HEATMAP)}\n              style={{ marginBottom: 10 }}>\n              Heatmap\n            </Button>\n            <Button\n              active={type === layerTypes.MARKER || undefined}\n              onClick={() => setType(layerTypes.MARKER)}>\n              Markers\n            </Button>\n          </Sider>\n          <StyledMapContainer>\n            {map && <Layers type={type} dataSource={data} map={map} />}\n            <MapComponent setMapRef={setMap} />\n          </StyledMapContainer>\n        </Container>\n      </Spin>\n    </>\n  );\n}\n","export function convertGeoJson(data = []) {\n  const featurePoints = data.map(d => {\n    const { latitude, longitude, ...props } = d;\n    return {\n      // feature Point\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [longitude, latitude],\n      },\n      properties: {\n        title: `Residents ${d.residents}`,\n        ...props,\n      },\n    };\n  });\n\n  return {\n    type: 'FeatureCollection',\n    features: featurePoints,\n  };\n}\n"],"sourceRoot":""}